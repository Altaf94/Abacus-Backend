# Generated by Django 4.2.23 on 2025-08-25 09:08

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_question_abacusexercise_questions'),
    ]

    operations = [
        migrations.CreateModel(
            name='LiveSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_code', models.CharField(max_length=32, unique=True)),
                ('teacher_identifier', models.CharField(max_length=100)),
                ('student_identifier', models.CharField(blank=True, max_length=100)),
                ('concept', models.CharField(max_length=100)),
                ('length_of_question', models.PositiveIntegerField()),
                ('speed', models.PositiveIntegerField(help_text='Speed in seconds or as per requirement')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('current_index', models.PositiveIntegerField(default=0, help_text='0-based pointer to current question in session')),
            ],
        ),
        migrations.CreateModel(
            name='AssignedQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_index', models.PositiveIntegerField(help_text='0-based order in session')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('is_answered', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='core.question')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_questions', to='core.livesession')),
            ],
            options={
                'ordering': ['order_index', 'id'],
                'unique_together': {('session', 'order_index')},
            },
        ),
    ]
